name: .NET Core

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Building artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.300
    - name: Install dependencies linux
      run: dotnet restore -r linux-x64
    - name: Build Linux
      run: dotnet publish -r linux-x64 --no-restore -c Release -f netcoreapp3.1 --self-contained true -p:PublishSingleFile=true -o assembly/linux/
    - name: Install dependencies windows
      run: dotnet restore -r win-x64
    - name: Build Windows
      run: dotnet publish -r win-x64 --no-restore -c Release -f netcoreapp3.1 --self-contained true -p:PublishSingleFile=true -o assembly/windows/
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Linux Release Asset
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: assembly/linux/SS13ServerApi
        asset_name: SS13ServerApi
    - name: Upload Windows Release Asset
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: assembly/windows/SS13ServerApi.dll
        asset_name: SS13ServerApi.dll